/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module",
        "extraFileExtensions": [".html"]
    },
    "plugins": [
        "@angular-eslint/eslint-plugin",
        "eslint-plugin-import",
        "eslint-plugin-prefer-arrow",
        "@typescript-eslint"
    ],
    "root": true,
    "ignorePatterns": ["src/demo/**/*.html"],
    "rules": {
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/component-selector": [
            "error",
            {
                "type": "element",
                // "prefix": "plex",
                "style": "kebab-case"
            }
        ],
        // "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/directive-selector": [
            "error",
            {
                "type": "attribute",
                // "prefix": "plex",
                "style": "camelCase"
            }
        ],
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-member-accessibility": [
            "off",
            {
                "accessibility": "explicit"
            }
        ],
        // "@typescript-eslint/indent": [
        //     "error",
        //     4,
        //     {
        //         "ObjectExpression": "first",
        //         "FunctionDeclaration": {
        //             "parameters": "first"
        //         },
        //         "FunctionExpression": {
        //             "parameters": "first"
        //         }
        //     }
        // ],
        // "@typescript-eslint/member-delimiter-style": [
        //     "error",
        //     {
        //         "multiline": {
        //             "delimiter": "semi",
        //             "requireLast": true
        //         },
        //         "singleline": {
        //             "delimiter": "semi",
        //             "requireLast": false
        //         }
        //     }
        // ],
        // "@typescript-eslint/naming-convention": [
        //     "error",
        //     {
        //         "selector": "variable",
        //         "format": [
        //             "camelCase",
        //             "UPPER_CASE"
        //         ],
        //         "leadingUnderscore": "forbid",
        //         "trailingUnderscore": "forbid"
        //     }
        // ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-inferrable-types": [
            "error",
            {
                "ignoreParameters": true
            }
        ],
        // "@typescript-eslint/no-shadow": [
        //     "error",
        //     {
        //         "hoist": "all"
        //     }
        // ],
        // "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/prefer-function-type": "error",
        // "@typescript-eslint/quotes": [
        //     "error",
        //     "single"
        // ],
        // "@typescript-eslint/semi": [
        //     "error",
        //     "always"
        // ],
        // "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/unified-signatures": "error",
        // "brace-style": [
        //     "error",
        //     "1tbs"
        // ],
        // "curly": "error",
        "dot-notation": "off",
        // "eol-last": "error",
        // "eqeqeq": [
        //     "error",
        //     "smart"
        // ],
        "guard-for-in": "off",
        "id-denylist": "off",
        "id-match": "off",
        "import/no-extraneous-dependencies": [
            "error",
            {
                "devDependencies": false
            }
        ],
        "indent": "off",
        "max-len": [
            "off",
            {
                "code": 140
            }
        ],
        "no-bitwise": "error",
        "no-caller": "error",
        // "no-console": "error",
        "no-constant-condition": "error",
        "no-debugger": "error",
        "no-empty": "off",
        "no-empty-function": "off",
        "no-eval": "error",
        "no-fallthrough": "error",
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 2
            }
        ],
        "no-new-wrappers": "error",
        // "no-redeclare": "error",
        "no-restricted-imports": "error",
        "no-shadow": "off",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-underscore-dangle": "off",
        "no-unused-expressions": "off",
        "no-unused-labels": "error",
        // "no-var": "error",
        // "object-shorthand": "error",
        // "prefer-arrow/prefer-arrow-functions": [
        //     "error",
        //     {
        //         "allowStandaloneDeclarations": true
        //     }
        // ],
        "prefer-const": "error",
        "prefer-object-spread": "error",
        // "quote-props": [
        //     "error",
        //     "as-needed"
        // ],
        "quotes": "off",
        // "radix": "error",
        "semi": "off",
        // "space-before-function-paren": [
        //     "error",
        //     {
        //         "anonymous": "always",
        //         "named": "never",
        //         "asyncArrow": "always"
        //     }
        // ],
        // "spaced-comment": [
        //     "error",
        //     "always",
        //     {
        //         "markers": [
        //             "/"
        //         ]
        //     }
        // ],
    }
};
