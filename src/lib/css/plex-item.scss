// Links
a,
ul,
li {
    text-decoration: none;
    color: inherit;
    list-style: none;
    margin: inherit;
    padding-left: 0;

    &img.item-img {
        width: 1rem;
        height: 1rem;
        background-color: gray;
    }
}

.plex-label {
    line-height: 1rem;

    &.sm {
        font-size: .75rem;
    }

    &.md {
        font-size: .9rem;
    }

    &.lg {
        font-size: 1rem;
    }
}

div.item-list-heading {

    display: grid;
    grid-gap: .25rem;

    height: 40px;
    max-height: 40px;
    margin-bottom: .2rem;

    &.completo {
        grid-auto-flow: column;
    }

    &.contenido {
        grid-auto-columns: max-content;
        grid-auto-flow: column;
    }


    >* {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        padding-left: .5rem;
    }

    >[checkbox] {
        max-width: 25px;
        padding: 1.25rem;
        justify-content: center;
    }


    >plex-bool {

        label {
            margin-top: 0 !important;
        }

    }

    [label],
    [badge],
    [button] {
        justify-self: flex-start !important;
        min-width: 50px;
        max-width: 250px;
    }

    plex-dropdown {

        .btn,
        .dropdown-item {
            padding: 5px;
            font-size: .9rem;
        }
    }

    plex-datetime {

        input,
        .btn {
            padding: 5px;
            font-size: .9rem;
        }
    }

    plex-button,
    plex-badge,
    plex-dropdown {
        justify-self: flex-start;
        margin-right: 4px;

        &:last-child {
            margin-right: 0;
        }
    }

}

div.item-list {
    display: grid;
    grid-gap: .25rem;
    height: 85px;
    max-height: 80px;
    margin-bottom: .2rem;
    padding: 0 1rem;
    
    &:hover {
        box-sizing: border-box;
        border: solid 2px $blue;
        background-color: $light-blue;
    }
    
    &.selected {
        background-color: $dark-blue !important;
        color: white !important;
        
        plex-bool {
            .mat-checkbox-inner-container {
                background: white;
            }
        }

        plex-dropdown {
            .btn {
                color: white;
            }
        }
    }

    // grid-template-columns: minmax(100px, min-content) repeat(auto-fill, 200px);

    &.completo {
        grid-auto-flow: column;

        .badges,
        span {
            justify-content: flex-start;
        }

        .botonera {
            width: 100%;
            justify-content: flex-end;
        }
    }

    &.contenido {
        grid-auto-columns: max-content;
        grid-auto-flow: column;

        .badges,
        .botonera,
        span {
            justify-content: flex-start;
        }
    }

    >* {
        display: flex;
        align-items: center;
        justify-self: flex-start;
    }

    // Items que componen la lista que no son componentes Angular
    span,
    div,
    img {
        justify-self: flex-start !important;
    }

    >plex-bool {

        label {
            margin-top: 0 !important;
        }
    }

    plex-label {
        justify-self: flex-start !important;
        width: auto;
        min-width: 100px;
        max-width: 400px;
    }

    plex-dropdown {

        .btn,
        .dropdown-item {
            padding: 5px;
            font-size: .9rem;
            background: transparent !important;
        }

        &[icon] {
            button {
                padding: 0;
                border: 0;
                height: 27px;
            }

            i {
                line-height: 28px;
            }
        }
    }

    upload-file {
        display: flex;
        flex-flow: column-reverse;
    }

    plex-datetime {
        justify-self: flex-start !important;

        input,
        .btn {
            padding: 5px;
            font-size: .9rem;
        }
    }

    // Se estiliza icono - TODO: Agregar propiedad outline al componente plex-icon
    plex-icon {
        i {
            display: flex;
            justify-content: center;
            align-items: center;
            border: solid 2px;
            border-radius: 50%;
            // font-size: 2rem;
            // padding: 15px;
            height: 3rem; 
            width: 3rem;            
        }
    }

    plex-button,
    plex-badge,
    plex-dropdown,
    upload-file,
    upload {
        margin-right: 4px;

        &:last-child {
            margin-right: 0;
        }
    }

}

.striped>:nth-child(odd)>div {
    background: rgba(0, 0, 0, .05);
}


.item-list,
.item-list-heading {
    // grid-template-columns: minmax(135px, max-content) repeat(auto-fill, minmax(200px, max-content)) !important;
}

.item-list.completo,
.item-list-heading.completo {
    // grid-template-columns: minmax(135px, max-content) repeat(auto-fill, minmax(310px, max-content)) !important;
}

// Se modifican los valores del minmax para evitar corrimiento al diferir en cantidad de elementos un item de otro.
.full-width {


// Sin checkbox, Sin icono
    .item-list,.item-list-heading {
        grid-template-columns: repeat(auto-fit, minmax(135px, 1fr)) !important;
    } 

// Con icono, sin checkbox
    .item-list.has-icon,.item-list-heading.has-icon {
        grid-template-columns: 55px repeat(auto-fit, minmax(135px, 1fr)) !important;
    } 

// Sin icono, con checkbox
    .item-list.has-checkbox,.item-list-heading.has-checkbox {
        grid-template-columns: 25px repeat(auto-fit, minmax(135px, 1fr)) !important;
    } 

// Con icono, con checkbox
    .item-list.has-checkbox.has-icon,.item-list-heading.has-checkbox.has-icon {
        grid-template-columns: 25px 55px repeat(auto-fit, minmax(135px, 1fr)) !important;
    } 

}

.min-width {
    .item-list,
    .item-list-heading {
        grid-template-columns: minmax(20px, max-content) repeat(auto-fill, minmax(135px, max-content)) !important;
    }
}


@media screen and (max-width: 1366px) {

    .selectable,
    .full-width {

        .item-list,
        .item-list-heading {
            grid-template-columns: minmax(90px, max-content) repeat(auto-fit, minmax(135px, max-content)) !important;
        }
    }

    .item-list.completo,
    .item-list-heading.completo {
        grid-template-columns: minmax(155px, max-content) repeat(auto-fit, minmax(250px, 100%)) !important;
    }

    @for $items from 1 through 20 {

        .item-list.count-#{$items},
        .item-list-heading.count-#{$items} {
            grid-template-columns: repeat(#{$items, 1fr}) !important;
        }
    }
}