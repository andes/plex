@import './variables.scss';
@import './mixins/cardBackground.scss';
@import './mixins/_contrast.scss';

plex-card {
    box-sizing: border-box;
    &[selectable] {
        cursor: pointer;
    }

    .card {
        display: flex;
        padding: 1.5rem;
        height: 100%;
        justify-content: space-between;
        
        > img, > plex-icon {
            margin-bottom: .75rem;
            object-fit: cover!important;
        }

        div {
            &.text-start {
                text-align: left;
            }
            &.text-end {
                text-align: right;
            }
        }
    }
    
    // Estados interactivos
    @mixin filledCardHover {
        &.selectable {
            &:hover, &.selected {
                box-shadow: inset 0 0 0 2px var(--color-baseDarker)!important;
                background-color: var(--color-baseDark)!important;
            }
        }
    }

    @mixin outlinedCardHover {
        &.selectable {
            &:hover, &.selected {
                box-shadow: inset 0 0 0 2px var(--color-base)!important;
                background-color: var(--color-baseLight)!important;
                color: white;
                &:not(.bg-filled-dark) {
                    color: black;
            }
            }
        }
    }

    @mixin customCardHover {
        &.selectable {
            &:hover, &.selected {
                box-shadow: inset 0 0 0 2px var(--color-base)!important;
                background-color: var(--color-base)!important;
                filter: brightness(0.9);
            }
        }
    }

    > div {
        --lighten: 50%;
        --darken: 10%;
        --darkest: 25%;
        --color-baseLight: hsl(var(--colorDominante-h), var(--colorDominante-s), calc(var(--colorDominante-l) + var(--lighten)));
        --color-base: hsl(var(--colorDominante-h), var(--colorDominante-s), var(--colorDominante-l));
        --color-baseDark: hsl(var(--colorDominante-h), var(--colorDominante-s), calc(var(--colorDominante-l) - var(--darken )));
        --color-baseDarker: hsl(var(--colorDominante-h), var(--colorDominante-s), calc(var(--colorDominante-l) - var(--darkest )));

        // DEFAULT
        // filled
        &.bg-filled-default {   
            // descomposición del dominante
            --colorDominante-h: 0;
            --colorDominante-s: 0%;
            --colorDominante-l: 90%;

            background-color: var(--color-base)!important;
            @include filledCardHover;
            @include text-contrast(white);
        }
        
        // outlined
        &.bg-outlined-default {
            --lighten: 25%;
            --colorDominante-h: 0;
            --colorDominante-s: 0%;
            --colorDominante-l: 70%;

            @include outlinedCardHover;
            // calculo contraste en funcion del dominante
            @include text-contrast(white);
        }
    
        // DARK
        // filled
        &.bg-filled-dark {
            --lighten: 10%;
            --colorDominante-h: 198;
            --colorDominante-s: 100%;
            --colorDominante-l: 11%;
                
            background-color: var(--color-base)!important;
            @include outlinedCardHover;
            @include text-contrast(black);
        }
        
        // outlined
        &.bg-outlined-dark {
            --lighten: 85%;
            --colorDominante-h: 198;
            --colorDominante-s: 100%;
            --colorDominante-l: 11%;
            
            box-shadow: inset 0 0 0 2px var(--color-base);
            @include outlinedCardHover;
            @include text-contrast(white);
        }

        // CUSTOM
        &.bg-filled-custom {
            --color-base: var(--card-color);

            background-color: var(--card-color)!important;
            
            // TODO: función que descomponga color (hsl) en tiempo de ejecución y lo almacene en una variable para estados :hover 
            plex-badge > span.badge {
                color: white!important;
                border-color: white!important;
            }

            plex-button {
                > button.btn {
                    background: white!important;
                    border: none!important;
                    box-shadow: none!important;
                    color: var(--color-base)!important;
                
                    &:hover {
                        filter: brightness(.85);
                    }
                
                    &:focus {
                        border: solid 2px darkgray!important;
                    }
                }
            }
            @include customCardHover;
            @include text-contrast(black);
        }

        &.bg-outlined-custom {
            --color-base: var(--card-color);
            --color-baseDark: var(--card-color);
            box-shadow: inset 0 0 0 2px var(--card-color)!important;

            @include customCardHover;
            @include text-contrast(white);
        }

        // SUCCESS
        // filled
        &.bg-filled-success {
            --lighten: 40%;
            --colorDominante-h: 86;
            --colorDominante-s: 56%;
            --colorDominante-l: 51%;
            @include cardBackground;
            background-color: var(--color-base)!important;
            @include filledCardHover;
            @include text-contrast(#70a728);
        }

        // outlined
        &.bg-outlined-success {
            --lighten: 40%;
            --colorDominante-h: 86;
            --colorDominante-s: 56%;
            --colorDominante-l: 51%;
            box-shadow: inset 0 0 0 2px var(--color-base);
            @include outlinedCardHover;
            @include text-contrast(#8cc63f);
        }

        // WARNING
        &.bg-filled-warning {
            --lighten: 35%;
            --colorDominante-h: 29;
            --colorDominante-s: 100%;
            --colorDominante-l: 57%;

            @include cardBackground;
            background-color: var(--color-base)!important;
            @include filledCardHover;
            @include text-contrast(#c55f00);
        }
        
        // outlined
        &.bg-outlined-warning {
            --lighten: 35%;
            --colorDominante-h: 29;
            --colorDominante-s: 100%;
            --colorDominante-l: 57%;
            box-shadow: inset 0 0 0 2px var(--color-base);
            @include outlinedCardHover;
            @include text-contrast(#fdc189);
        }
            
        // Dominante
        &.bg-filled-danger {
            --lighten: 35%;
            --colorDominante-h: 7;
            --colorDominante-s: 71%;
            --colorDominante-l: 55%;
            @include cardBackground;
            background-color: var(--color-base)!important;
            @include filledCardHover;
            @include text-contrast(#b9311f);
        }
        
        // outlined
        &.bg-outlined-danger {
            --lighten: 35%;
            --colorDominante-h: 7;
            --colorDominante-s: 71%;
            --colorDominante-l: 55%;
            box-shadow: inset 0 0 0 2px var(--color-base);
            @include outlinedCardHover;
            @include text-contrast(#fdc189);
        }
    
        // Info
        &.bg-filled-info {
            --colorDominante-h: 195;
            --colorDominante-s: 100%;
            --colorDominante-l: 44%;
            @include cardBackground;
            background-color: var(--color-base)!important;
            @include filledCardHover;
            @include text-contrast(#057ea7);
        }
        
        // outlined
        &.bg-outlined-info {
            --colorDominante-h: 195;
            --colorDominante-s: 100%;
            --colorDominante-l: 44%;
            box-shadow: inset 0 0 0 2px var(--color-base);
            @include outlinedCardHover;
            @include text-contrast(#c2e6f6);
        }
    }

    // Espaciado entre elementos
    > div > div > plex-badge, plex-button {
        &:nth-child(n+2) {
            margin-left: .5rem;
        }
    }
}
